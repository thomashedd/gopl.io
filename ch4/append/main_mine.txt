package main

import "fmt"

func appendInt(x []int, y int) []int {
	var z []int
	zlen := len(x) + 1
	if zlen <= cap(x) {
		// there is room to grow. Extend the slice
		z = x[:zlen]
	} else {
		// there is not enough space, allocate a new array
		// growy by doubling, for amortized linear complexity
		zcap := zlen
		if zcap < 2*len(x) {
			zcap = 2 * len(x)
		}
		z = make([]int, zlen, zcap)
		copy(z, x) // a built-in function;
	}
	z[len(x)] = y
	return z
}

func main() {

	s := []int{0, 1, 2, 3, 5}

	fmt.Print(s)

	sNew := appendInt(s, 8)

	fmt.Print(sNew)

}
